package ${PROJECT_PACKAGE}.start.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2WebMvc;

@Configuration
@EnableSwagger2WebMvc
public class Knife4jConfiguration {

    @Value("${server.servlet.context-path}")
    private String contextPath;

    private static final String BASE_PACKAGE = "${PROJECT_PACKAGE}";

    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title("${PROJECT_TITLE}")
                .description("${PROJECT_DESCRIPTION} (generated by visual-ddd generator)")
                .termsOfServiceUrl("/")
                .version("${PROJECT_VERSION}")
                .contact(new Contact("开发云", "https://ddd.wakedt.cn", ""))
                .build();
    }

    @Bean(value = "allApi")
    public Docket allRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .groupName("${PROJECT_TITLE}-全部API")
                .select()
                .apis(RequestHandlerSelectors.basePackage(BASE_PACKAGE))
                .paths(PathSelectors.ant(contextPath + "/**"))
                .build();
    }

    @Bean(value = "webApi")
    public Docket groupWebRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .groupName("${PROJECT_TITLE}-web端API")
                .select()
                .apis(RequestHandlerSelectors.basePackage(BASE_PACKAGE))
                .paths(PathSelectors.ant(contextPath + "/web/**"))
                .build();
    }

    @Bean(value = "appApi")
    public Docket groupAppRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .groupName("${PROJECT_TITLE}-小程序API")
                .select()
                .apis(RequestHandlerSelectors.basePackage(BASE_PACKAGE))
                .paths(PathSelectors.ant(contextPath + "/app/**"))
                .build();
    }

}