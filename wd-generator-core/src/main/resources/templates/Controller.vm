#parse("templates/ClassFunction.vm")
#macro(controllerImport)
import java.util.List;
import javax.annotation.Resource;

import com.wakedata.common.core.dto.PageResultDTO;
import com.wakedata.common.core.dto.ResultDTO;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import javax.validation.Valid;
import ${IMPORT_PACKAGE_MAP.get("${DOMAIN_CLASS_NAME}RpcService")}.${DOMAIN_CLASS_NAME}RpcService;
#foreach ($query in ${DOMAIN_QUERY_LIST})
import ${IMPORT_PACKAGE_MAP.get("${query.name}")}.${query.name};
#end
#foreach ($cmd in ${DOMAIN_CMD_LIST})
import ${IMPORT_PACKAGE_MAP.get("${cmd.category}DTO")}.${cmd.category}DTO;
#end
#foreach ($dto in ${DOMAIN_DTO_LIST})
import ${IMPORT_PACKAGE_MAP.get("${dto.name}")}.${dto.name};
#end
#end
#macro(controller)

    @Resource
    private ${DOMAIN_CLASS_NAME}RpcService ${CASE_FORMAT_LOWER_CAMEL.convert(${DOMAIN_CLASS_NAME})}RpcService;
#foreach($aggregation in ${DOMAIN_AGGREGATION_LIST})
#set($RootIdType = ${aggregation.getRoot().getId().getType()})
#set($RootIdName = ${aggregation.getRoot().getId().getName()})
#foreach($cmd in ${aggregation.getCommandList()})

    @ApiOperation("${cmd.description}")
    @PostMapping("/${CASE_FORMAT_LOWER_HYPHEN.convert(${cmd.category})}")
    #if(${cmd.getRepository().getValue()} == "save")
    public ResultDTO<${RootIdType}> ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.category})}(@RequestBody @Valid ${cmd.category}DTO dto) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${DOMAIN_CLASS_NAME})}RpcService.${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.category})}(dto);
    }
    #end
    #if(${cmd.getRepository().getValue()} != "save")
    public ResultDTO<Boolean> ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.category})}(@RequestBody @Valid ${cmd.category}DTO dto) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${DOMAIN_CLASS_NAME})}RpcService.${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.category})}(dto);
    }
    #end
#end
#end
#foreach ($query in ${DOMAIN_QUERY_LIST})

    @ApiOperation("${query.description}")
    @GetMapping("/${CASE_FORMAT_LOWER_HYPHEN.convert(${query.name})}")
    #if(${query.pagination})
    public PageResultDTO<${query.returnInfo.type}> ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}(${query.name} pageQuery) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${DOMAIN_CLASS_NAME})}RpcService.${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}(pageQuery);
    }
    #end
    #if(!${query.pagination})
    public ResultDTO<${query.returnInfo.type}> ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}(${query.name} query) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${DOMAIN_CLASS_NAME})}RpcService.${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}(query);
    }
    #end
#end
#end