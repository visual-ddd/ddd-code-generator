## ============= 类import列表 =============
#macro(importPackage $importPackages)
#foreach ($importPackage in $importPackages)
import ${importPackage};
#end
#end
## ============= 类描述 =============
#macro(comment $description)
/**
 * $description
 *
 * @author ${DOMAIN_AUTHOR}
## * @date ${DOMAIN_DATE_TIME}
## * @since 1.0
 */
#end
## ============= 类字段列表 =============
#macro(filed $filedList)
    #foreach ($field in $filedList)

    #if($field.description)
    /** ${field.description} */
    #end
    ${field.access} ${field.type} ${field.name};
    #end
#end
## ============= 类拓展字段列表 =============
#macro(filedExt $filedList, $arg)
    #foreach ($field in $filedList)

    #if($arg == "swagger")
    @ApiModelProperty(value = "${field.description}")
    #end
    ${field.access} ${field.type} ${field.name};
    #end
#end
## ============= 类方法列表 =============
#macro(method $methodList)
    #foreach ($method in $methodList)

    #if($method.description)
     /** ${method.description} */
    #end
    ${method.access} ${method.signature.returnInfo.type} ${method.name}(#foreach($parameter in ${method.signatureInfo.parameterList})${parameter.type} ${parameter.name}#end){
        // Do Something
        #if($method.signature.returnInfo.type != "void")
        return null;
     #end
    }
    #end
#end
## ============= 继承方法列表 =============
#macro(overrideMethod $methodList)
    #foreach ($method in $methodList)

    #if($method.description)
     /** ${method.description} */
    #end
    @Override
    ${method.access} ${method.signature.returnInfo.type} ${method.name}(${PARSE_STRING_UTIL.extractMethodParameterList(${method.signature.parameterList})}) {
        // Do Something
        #if($method.signature.returnInfo.type != "void")
        return null;
     #end
    }
    #end
#end
## ============= 接口方法列表 =============
#macro(interfaceMethod $methodList)
    #foreach ($method in $methodList)

    #if($method.description)
    /** ${method.description} */
    #end
    ${method.returnType} ${method.name}(${method.attributeLabel});
    #end
#end
## ============= 抽象方法列表 =============
#macro(abstractMethod $methodList)
    #foreach ($method in $methodList)

    #if($method.description)
    /** ${method.description} */
    #end
    public abstract ${method.signature.returnInfo.type} ${method.name}(${PARSE_STRING_UTIL.extractMethodParameterList(${method.signature.parameterList})});
    #end
#end