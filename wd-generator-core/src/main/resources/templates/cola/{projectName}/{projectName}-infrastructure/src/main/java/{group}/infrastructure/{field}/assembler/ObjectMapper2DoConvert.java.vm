#parse("templates/ObjectMapper.vm")
package $InfraConvertPackagePath;

import ${PROJECT_PACKAGE}.infrastructure.BaseConvert;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
import ${OBJECT_MAPPER_SOURCE_PACKAGE_PATH}.${OBJECT_MAPPER_SOURCE_OBJECT};
import ${OBJECT_MAPPER_TARGET_PACKAGE_PATH}.${OBJECT_MAPPER_TARGET_OBJECT};
#dependencyEnumConverter()

#comment("${OBJECT_MAPPER_CLASS_NAME}和DO转换器")
##@Mapper(uses = {
##    #foreach($aggregationEnum in ${AGGREGATION_ENUM_LIST})
##        ${aggregationEnum.name}Converter.class,
##    #end
##})
public interface ${OBJECT_MAPPER_CLASS_NAME}2DoConvert extends BaseConvert<${OBJECT_MAPPER_SOURCE_OBJECT}, ${OBJECT_MAPPER_TARGET_OBJECT}> {

##    #foreach ($mapper in ${OBJECT_MAPPER_OBJECT_FIELD_LIST})
##    #if(${mapper.sourceField} && ${mapper.targetField})
##    @Mapping(source = "${mapper.sourceField}",target = "${mapper.targetField}")
##    #end
##    #end
    ${OBJECT_MAPPER_CLASS_NAME}2DoConvert INSTANCE = Mappers.getMapper(${OBJECT_MAPPER_CLASS_NAME}2DoConvert.class);
}
