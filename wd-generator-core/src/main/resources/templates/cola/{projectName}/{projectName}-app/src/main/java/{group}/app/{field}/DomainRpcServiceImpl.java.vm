#parse("templates/ClassFunction.vm")
package ${IMPORT_PACKAGE_MAP.get("${DOMAIN_CLASS_NAME}RpcServiceImpl")};

import com.wakedata.common.core.dto.PageResultDTO;
import com.wakedata.common.core.dto.ResultDTO;
import ${IMPORT_PACKAGE_MAP.get("${DOMAIN_CLASS_NAME}RpcService")}.${DOMAIN_CLASS_NAME}RpcService;
#foreach ($query in ${DOMAIN_QUERY_LIST})
import ${IMPORT_PACKAGE_MAP.get("${query.name}")}.${query.name};
#end
#foreach ($query in ${DOMAIN_QUERY_LIST})
import ${IMPORT_PACKAGE_MAP.get("${query.name}Exe")}.${query.name}Exe;
#end
#foreach ($cmd in ${DOMAIN_CMD_LIST})
import ${IMPORT_PACKAGE_MAP.get("${cmd.category}DTO")}.${cmd.category}DTO;
#end
#foreach ($cmd in ${DOMAIN_CMD_LIST})
import ${IMPORT_PACKAGE_MAP.get("${cmd.category}DTOConvert")}.${cmd.category}DTOConvert;
#end
#foreach ($cmd in ${DOMAIN_CMD_LIST})
import ${IMPORT_PACKAGE_MAP.get("${cmd.name}Handler")}.${cmd.name}Handler;
#end
#foreach ($dto in ${DOMAIN_DTO_LIST})
import ${IMPORT_PACKAGE_MAP.get("${dto.name}")}.${dto.name};
#end
#foreach ($objectMapper in ${DOMAIN_OBJECT_MAPPER_LIST})
import ${IMPORT_PACKAGE_MAP.get("${objectMapper.name}")}.${objectMapper.name};
#end
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;

#comment("${DOMAIN_DESCRIPTION}-RPC能力接口实现")
@Service
public class ${DOMAIN_CLASS_NAME}RpcServiceImpl implements ${DOMAIN_CLASS_NAME}RpcService {

#foreach($cmd in ${DOMAIN_CMD_LIST})
    @Resource
    private ${cmd.name}Handler ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.name})}Handler;
#end
#foreach($query in ${DOMAIN_QUERY_LIST})
    @Resource
    private ${query.name}Exe ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}Exe;
#end
#foreach($aggregation in ${DOMAIN_AGGREGATION_LIST})
#set($RootIdType = ${aggregation.getRoot().getId().getType()})
#set($RootIdName = ${aggregation.getRoot().getId().getName()})
#foreach($cmd in ${aggregation.getCommandList()})

    @Override
    #if(${cmd.getRepository().getValue()} == "save")
    public ResultDTO<${RootIdType}> ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.category})}(${cmd.category}DTO dto) {
        ${RootIdType} ${RootIdName} = ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.name})}Handler.handle(${cmd.category}DTOConvert.INSTANCE.dto2Do(dto));
        return ResultDTO.success(${RootIdName});
    }
    #end
    #if(${cmd.getRepository().getValue()} != "save")
    public ResultDTO<Boolean> ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.category})}(${cmd.category}DTO dto) {
        ${CASE_FORMAT_LOWER_CAMEL.convert(${cmd.name})}Handler.handle(${cmd.category}DTOConvert.INSTANCE.dto2Do(dto));
        return ResultDTO.success(Boolean.TRUE);
    }
    #end
#end
#end
#foreach ($query in ${DOMAIN_QUERY_LIST})

    @Override
    #if(${query.pagination})
        public PageResultDTO<${query.returnInfo.type}> ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}(${query.name} pageQuery) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}Exe.execute(pageQuery);
    }
    #end
    #if(!${query.pagination})
    public ResultDTO<${query.returnInfo.type}> ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}(${query.name} query) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${query.name})}Exe.execute(query);
    }
    #end
#end

}