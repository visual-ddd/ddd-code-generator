#parse("templates/ClassFunction.vm")
#set($dtoClassName = ${PARSE_STRING_UTIL.extractObjectType(${QUERY_RETURN_INFO.type})})
#set($doClassName = ${IMPORT_PACKAGE_MAP.get("mapper::dto::${dtoClassName}")})
#set($doPackagePath = ${IMPORT_PACKAGE_MAP.get("${doClassName}")})
#set($aggregationClassName = ${IMPORT_PACKAGE_MAP.get("mapper::entity::${doClassName}")})
#set($aggregationPackagePath = ${IMPORT_PACKAGE_MAP.get("${aggregationClassName}Mapper")})
package ${IMPORT_PACKAGE_MAP.get("${QUERY_CLASS_NAME}Exe")};

#if(${QUERY_PAGINATION})
import java.util.List;
import com.github.pagehelper.PageInfo;
import com.github.pagehelper.PageHelper;
import com.wakedata.common.core.dto.PageResultDTO;
#end
#if(!${QUERY_PAGINATION})
import com.wakedata.common.core.dto.ResultDTO;
#end
import javax.annotation.Resource;
import org.springframework.stereotype.Component;
import ${IMPORT_PACKAGE_MAP.get(${QUERY_CLASS_NAME})}.${QUERY_CLASS_NAME};
import ${doPackagePath}.${doClassName};
import ${aggregationPackagePath}.${aggregationClassName}Mapper;
import ${IMPORT_PACKAGE_MAP.get(${dtoClassName})}.${dtoClassName};
import ${IMPORT_PACKAGE_MAP.get("${dtoClassName}2DOConvert")}.${dtoClassName}2DOConvert;

#comment("${QUERY_CLASS_DESCRIPTION}-查询器")
@Component
public class ${QUERY_CLASS_NAME}Exe {

    @Resource
    private ${aggregationClassName}Mapper mapper;

    #if(${QUERY_PAGINATION})
    public PageResultDTO<${QUERY_RETURN_INFO.type}> execute(${QUERY_CLASS_NAME} pageQuery) {

        PageHelper.startPage(pageQuery.getPageNo(),pageQuery.getPageSize());

        PageInfo<$doClassName> pageInfo = new PageInfo<>(mapper.${CASE_FORMAT_LOWER_CAMEL.convert(${QUERY_CLASS_NAME})}(pageQuery));
        ${QUERY_RETURN_INFO.type} ${CASE_FORMAT_LOWER_CAMEL.convert(${dtoClassName})}List = ${dtoClassName}2DOConvert.INSTANCE.doList2DtoList(pageInfo.getList());

        PageResultDTO<${QUERY_RETURN_INFO.type}> pageResultDTO = new PageResultDTO<>();
        pageResultDTO.setData(${CASE_FORMAT_LOWER_CAMEL.convert(${dtoClassName})}List);
        pageResultDTO.setPageNo(pageInfo.getPageNum());
        pageResultDTO.setPageSize(pageInfo.getSize());
        pageResultDTO.setTotalCount(pageInfo.getTotal());
        return pageResultDTO;
    }
    #end
    #if(!${QUERY_PAGINATION})
    public ResultDTO<${QUERY_RETURN_INFO.type}> execute(${QUERY_CLASS_NAME} query) {
        ${QUERY_RETURN_INFO.type} ${CASE_FORMAT_LOWER_CAMEL.convert(${dtoClassName})} = ${dtoClassName}2DOConvert.INSTANCE.do2Dto(mapper.${CASE_FORMAT_LOWER_CAMEL.convert(${QUERY_CLASS_NAME})}(query));
        return ResultDTO.success(${CASE_FORMAT_LOWER_CAMEL.convert(${dtoClassName})});
    }
    #end
}
