#set($projectBaseDir = "{project.basedir}")
#set($projectVersion = "{project.version}")
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>${PROJECT_PACKAGE}</groupId>
        <artifactId>${PROJECT_NAME}</artifactId>
        <version>${PROJECT_VERSION}</version>
    </parent>

    <artifactId>${PROJECT_NAME}-start</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <!-- Project modules Start -->
        <dependency>
            <groupId>${PROJECT_PACKAGE}</groupId>
            <artifactId>${PROJECT_NAME}-adapter</artifactId>
        </dependency>
        <!-- Project modules End -->

        <!-- wd-common dependency start -->
        <dependency>
            <groupId>com.wakedata.common</groupId>
            <artifactId>wd-common-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>com.wakedata.common</groupId>
            <artifactId>wd-common-userinfo</artifactId>
        </dependency>
        <!-- wd-common dependency End -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 引入Knife4j的官方start包,Swagger2基于Springfox2.10.5项目 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.9</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- 打包SpringBoot项目 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.4.13</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            ##      <plugin>
            ##        <groupId>pl.project13.maven</groupId>
            ##        <artifactId>git-commit-id-plugin</artifactId>
            ##        <version>2.2.1</version>
            ##        <executions>
            ##          <execution>
            ##            <phase>validate</phase>
            ##            <goals>
            ##              <goal>revision</goal>
            ##            </goals>
            ##          </execution>
            ##        </executions>
            ##        <configuration>
            ##          <dateFormat>yyyyMMddHHmmss</dateFormat>
            ##          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
            ##          <generateGitPropertiesFile>false</generateGitPropertiesFile>
            ##        </configuration>
            ##      </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.38.1</version>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>true</skip>
                    <images>
                        <image>
                            <name>${PROJECT_NAME}/server</name>
                            <build>
                                <dockerFileDir>$${projectBaseDir}</dockerFileDir>
                                <tags>
                                    <tag>$${projectVersion}</tag>
                                </tags>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
