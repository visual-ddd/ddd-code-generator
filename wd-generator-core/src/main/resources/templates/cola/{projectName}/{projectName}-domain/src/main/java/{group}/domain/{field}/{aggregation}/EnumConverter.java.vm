#parse("templates/ClassFunction.vm")
package ${IMPORT_PACKAGE_MAP.get("${ENUM_CLASS_NAME}Converter")};

import cn.hutool.json.JSONArray;
import cn.hutool.json.JSONUtil;
import com.wakedata.common.core.util.BaseEnumUtil;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;

#comment("${ENUM_CLASS_DESCRIPTION}-枚举转换器")
public class ${ENUM_CLASS_NAME}Converter {

    public Integer convertToDatabaseColumn(${ENUM_CLASS_NAME} ${CASE_FORMAT_LOWER_CAMEL.convert(${ENUM_CLASS_NAME})}) {
        return ${CASE_FORMAT_LOWER_CAMEL.convert(${ENUM_CLASS_NAME})}.getValue();
    }

    public ${ENUM_CLASS_NAME} convertToEntityAttribute(Integer value) {
        return BaseEnumUtil.getEnumByValue(value, ${ENUM_CLASS_NAME}.class);
    }

    public String convertToDatabaseColumn(List<${ENUM_CLASS_NAME}> enumList) {
        JSONArray jsonArray = new JSONArray();
        for (${ENUM_CLASS_NAME} enumType : Optional.ofNullable(enumList).orElse(Collections.emptyList())) {
            Integer value = convertToDatabaseColumn(enumType);
            jsonArray.add(value);
        }
        return jsonArray.toString();
    }

    public List<${ENUM_CLASS_NAME}> convertToDatabaseColumn(String jsonArray) {
        List<${ENUM_CLASS_NAME}> enumList = new ArrayList<>();
        List<Integer> values = JSONUtil.toList(jsonArray, Integer.class);
        for (Integer value : values) {
            enumList.add(convertToEntityAttribute(value));
        }
        return enumList;
    }
}