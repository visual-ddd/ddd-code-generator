#parse("templates/ClassFunction.vm")
package ${IMPORT_PACKAGE_MAP.get(${OBJECT_MAPPER_ID}).get("${OBJECT_MAPPER_SOURCE_OBJECT}2${OBJECT_MAPPER_TARGET_OBJECT}Convert")};

import ${IMPORT_PACKAGE_MAP.get(${DOMAIN_ID}).get("BaseConvert")}.BaseConvert;
import ${IMPORT_PACKAGE_MAP.get(${DOMAIN_ID}).get("BaseJsonConvertor")}.BaseJsonConvertor;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;
import org.mapstruct.Mapping;
import ${IMPORT_PACKAGE_MAP.get(${OBJECT_MAPPER_SOURCE_OBJECT_ID}).get(${OBJECT_MAPPER_SOURCE_OBJECT})}.${OBJECT_MAPPER_SOURCE_OBJECT};
import ${IMPORT_PACKAGE_MAP.get(${OBJECT_MAPPER_TARGET_OBJECT_ID}).get(${OBJECT_MAPPER_TARGET_OBJECT})}.${OBJECT_MAPPER_TARGET_OBJECT};

@Mapper(uses = {
        BaseJsonConvertor.class,
})
public interface ${OBJECT_MAPPER_SOURCE_OBJECT}2${OBJECT_MAPPER_TARGET_OBJECT}Convert extends BaseConvert<${OBJECT_MAPPER_SOURCE_OBJECT}, ${OBJECT_MAPPER_TARGET_OBJECT}> {

    ${OBJECT_MAPPER_SOURCE_OBJECT}2${OBJECT_MAPPER_TARGET_OBJECT}Convert INSTANCE = Mappers.getMapper(${OBJECT_MAPPER_SOURCE_OBJECT}2${OBJECT_MAPPER_TARGET_OBJECT}Convert.class);

#foreach ($mapper in ${OBJECT_MAPPER_OBJECT_FIELD_LIST})
#if(${mapper.sourceField} && ${mapper.targetField})
    @Mapping(source = "${mapper.sourceField}", target = "${mapper.targetField}")
#end
#end
    @Override
    ${OBJECT_MAPPER_TARGET_OBJECT} dto2Do(${OBJECT_MAPPER_SOURCE_OBJECT} dto);

#foreach ($mapper in ${OBJECT_MAPPER_OBJECT_FIELD_LIST})
#if(${mapper.sourceField} && ${mapper.targetField})
    @Mapping(source = "${mapper.targetField}", target = "${mapper.sourceField}")
#end
#end
    @Override
    ${OBJECT_MAPPER_SOURCE_OBJECT} do2Dto(${OBJECT_MAPPER_TARGET_OBJECT} d);
}