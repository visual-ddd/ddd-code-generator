#parse("templates/Aggregation.vm")
package ${IMPORT_PACKAGE_MAP.get(${CMD_ID}).get("${CMD_DTO_CLASS}2${CMD_CLASS_NAME}Convert")};

import ${IMPORT_PACKAGE_MAP.get(${DOMAIN_ID}).get("BaseConvert")}.BaseConvert;
import ${IMPORT_PACKAGE_MAP.get(${DOMAIN_ID}).get("BaseJsonConvertor")}.BaseJsonConvertor;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;
import ${IMPORT_PACKAGE_MAP.get(${CMD_ID}).get(${CMD_DTO_CLASS})}.${CMD_DTO_CLASS};
import ${IMPORT_PACKAGE_MAP.get(${CMD_ID}).get(${CMD_CLASS_NAME})}.${CMD_CLASS_NAME};
#importEnumConverter()

@Mapper(uses = {
        BaseJsonConvertor.class,
#foreach($aggregationEnum in ${AGGREGATION_ENUM_LIST})
        ${aggregationEnum.name}Converter.class,
#end
#foreach($valueObjectNode in ${AGGREGATION_VALUE_OBJECT_LIST})
        ${valueObjectNode.getValueObjectDTOName()}2${valueObjectNode.name}Convert.class,
#end
#foreach($entityNode in ${AGGREGATION_ENTITY_LIST})
        ${entityNode.getEntityDTOName()}2${entityNode.name}Convert.class,
#end
})
public interface ${CMD_DTO_CLASS}2${CMD_CLASS_NAME}Convert extends BaseConvert<${CMD_DTO_CLASS}, ${CMD_CLASS_NAME}> {

    ${CMD_DTO_CLASS}2${CMD_CLASS_NAME}Convert INSTANCE = Mappers.getMapper(${CMD_DTO_CLASS}2${CMD_CLASS_NAME}Convert.class);
}